version: '3.9'
services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - gains-network
    volumes:
      - postgres-data:/data/postgres

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    environment:
      REDIS_URL: ${REDIS_URL}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - gains-network
    volumes:
      - redis-data:/data/redis

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=redis
    ports:
      - '8081:8081'
    networks:
      - gains-network

  mailhog:
    container_name: mailhot
    restart: unless-stopped
    image: mailhog/mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - gains-network

  gains:
    image: gains
    container_name: gains
    restart: unless-stopped
    build:
      context: ./
      dockerfile: ./Dockerfile.dev
    stdin_open: true
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - gains-network
    depends_on:
      - postgres
      - mailhog
      - redis-commander
      - redis

networks:
  gains-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
